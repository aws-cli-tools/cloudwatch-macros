[tool.poetry]
name = "cloudwatch-macros"
version = "0.1.0"
description = "Collection of essential CloudFormation macros, effortlessly deployable via SAM."
authors = ["Efi Merdler-Kravitz <efi.merdler@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
cargo-lambda = "^0.22.0"
ziglang = "^0.11.0"

[tool.poe.env]
DIR = "cw-macros"
[tool.poe.tasks.lint]
shell = """
    set -e
    echo Lint
    CI="${CI:-false}"   
    cd  $DIR
    for dir in */ ; do
        if [ -d "$dir" ] && [ -f "$dir/Cargo.toml" ]; then
            cd "$dir"
            echo $dir
            if [ "$CI" = "true" ]; then
                cargo clippy --all-features
            else
                cargo clippy --all-features --fix --allow-dirty
            fi		
            cd ..
        fi
    done
"""

[tool.poe.tasks.format]
shell = """
    set -e
    echo Format
    CI="${CI:-false}"   
    cd  $DIR
    for dir in */ ; do
        if [ -d "$dir" ] && [ -f "$dir/Cargo.toml" ]; then
            cd "$dir"
            echo $dir
            if [ "$CI" = "true" ]; then
                cargo fmt --all -- --check
            else
                cargo fmt --all
            fi		
            cd ..
        fi
    done
"""

[tool.poe.tasks.audit]
shell = """
    set -e
    echo Audit
    cd  $DIR
    for dir in */ ; do
        if [ -d "$dir" ] && [ -f "$dir/Cargo.toml" ]; then
            cd "$dir"
            echo $dir
            cargo audit 		
            cd ..
        fi
    done
"""

[tool.poe.tasks.test]
shell = """
    set -e
    echo Test
    cd  $DIR
    for dir in */ ; do
        if [ -d "$dir" ] && [ -f "$dir/Cargo.toml" ]; then
            cd "$dir"
            echo $dir
            cargo test 		
            cd ..
        fi
    done
"""


[tool.poe.tasks.deploy]
shell = """
    cd $DIR && sam build && sam deploy
"""

[tool.poe.tasks] 
gate = ["lint", "format", "test", "audit"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
